# #################################################################################################
# Global Options
# #################################################################################################

# Default terminal is 256 colors
set-option -g default-terminal "xterm-256color"
set -g @yank_selection_mouse 'clipboard'

# set tmux prefix key
set-option -g prefix C-t
unbind-key C-b
bind-key C-t send-prefix

# source $TMUX_HOME/plugins
# if '[ -f $TMUX_HOME/theme ]' 'source $TMUX_HOME/theme'
# if '[ -f ~/.tmux.conf ]' 'source ~/.tmux.conf'

# Clipetty config
set -ag update-environment "SSH_TTY"

# Start window numbering at 1
set -g base-index 1
set -g pane-base-index 1

set-option -g status-position top

set-option -g repeat-time 0

# Removes ESC delay
set -sg escape-time 0

# Mouse works as expected
set-option -g mouse on

# Scrolling works as expected
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# Use vim keybindings in copy mode
setw -g mode-keys vi

set -g @continuum-restore 'on'


# #################################################################################################
# TPM plugins
# #################################################################################################

set -g @tpm_plugins '                     \
    ztlevi/maglev                         \
    soyuka/tmux-current-pane-hostname     \
    tmux-plugins/tpm                      \
    tmux-plugins/tmux-sensible            \
    tmux-plugins/tmux-resurrect           \
    tmux-plugins/tmux-continuum           \
    tmux-plugins/tmux-yank                \
    tmux-plugins/tmux-pain-control        \
    tmux-plugins/tmux-copycat             \
    tmux-plugins/tmux-open                \
    tmux-plugins/tmux-battery             \
    tmux-plugins/tmux-cpu                 \
    tmux-plugins/tmux-prefix-highlight    \
'

# Initialize TMUX plugin manager
run "$XDG_DATA_HOME/tmux/plugins/tpm/tpm"

# #################################################################################################
# Key Bindings
# #################################################################################################
# tmux-cssh
bind-key = set-window-option synchronize-panes

# Copy mode bind v
unbind-key -T copy-mode-vi v
bind-key -T copy-mode-vi v send-keys -X begin-selection

# tmux window keybindings
bind q confirm kill-window
bind Q kill-server
unbind c
bind n new-window
bind-key C-[ copy-mode
bind-key c confirm-before -p "kill-pane #P? (y/n)" kill-pane
bind-key C-c confirm kill-session

# bind key to swtich to emacs session
bind-key C-e attach -t emacs

# reload config without killing server
bind r refresh-client
bind R source-file $TMUX_HOME/config \; display-message "  Config reloaded..".

# Combine clear and clear history
bind -n C-l send-keys C-l \; run-shell "sleep .3s" \; clear-history

## Pane management
# Saner splitting commands
unbind %
unbind '"'
bind s split-window -c "#{pane_current_path}" -v
bind v split-window -c "#{pane_current_path}" -h

# Pane resizing
# bind C-h resize-pane -L 6
# bind C-j resize-pane -D 6
# bind C-k resize-pane -U 6
# bind C-l resize-pane -R 6

# Switch to last window
bind-key -T prefix tab switch-client -l

# Switch tmux window and session
bind-key -T prefix C-t choose-tree -Zw
bind . choose-window
bind -n M-H previous-window
bind -n M-L next-window
bind -n M-J switch-client -n
bind -n M-K switch-client -p

# Swap panes directionally
bind H run 'tmux-swap-pane left'
bind J run 'tmux-swap-pane down'
bind K run 'tmux-swap-pane up'
bind L run 'tmux-swap-pane right'
bind M run 'tmux-swap-pane master'

# Smart pane switching with awareness of vim splits
is_vim_emacs='echo "#{pane_current_command}" | \
    grep -iqE "((^|\/)g?(view|n?vim?x?)(diff)?$)|emacs"'

# enable in root key table
bind h if-shell "$is_vim_emacs" "send-keys C-t h" "select-pane -L"
bind j if-shell "$is_vim_emacs" "send-keys C-t j" "select-pane -D"
bind k if-shell "$is_vim_emacs" "send-keys C-t k" "select-pane -U"
bind l if-shell "$is_vim_emacs" "send-keys C-t l" "select-pane -R"
bind C-h if-shell "$is_vim_emacs" "send-keys C-t C-h" "select-pane -L"
bind C-j if-shell "$is_vim_emacs" "send-keys C-t C-j" "select-pane -D"
bind C-k if-shell "$is_vim_emacs" "send-keys C-t C-k" "select-pane -U"
bind C-l if-shell "$is_vim_emacs" "send-keys C-t C-l" "select-pane -R"
